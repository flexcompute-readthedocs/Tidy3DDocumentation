Searching 978 files for "Tidy3DBaseModel" (case sensitive)

~/Documents/Flexcompute/tidy3d-docs/tidy3d/tidy3d/components/base.py:
  762  
  763      def __eq__(self, other):
  764:         """Define == for two Tidy3DBaseModels."""
  765          if other is None:
  766              return False

~/Documents/Flexcompute/tidy3d-docs/tidy3d/tidy3d/plugins/adjoint/README.md:
  149  The `JaxDataArray` may freely store `jax` values and tracers and implements a few basic emulations of `xarray.DataArray` objects, such as `.sel` and `.isel`. Note that at this time `.interp` is not supported, but I think we could consider implementing it later. A user could, in principle, wrap `.sel` to do the interpolation themselves, but it was not considered at this stage because some trials to implement it myself ended badly.
  150  
  151: The `JaxDataArray` inherits directly from `Tidy3DBaseModel` alone and therefore implements its own pytree flattening and unflattening operations. Luckily, these operations are quite trivial. There are also a set of custom validations in the `JaxDataArray` to ensure it is set up and used properly as it does not natively provide nearly as strict argument che... <skipped 45 characters> ...
  152  
  153  ## Adjoint Method

~/Documents/Flexcompute/tidy3d-docs/tidy3d/tidy3d/plugins/invdes/optimizer.py:
   14  from .transformation import TransformationType
   15  
   16: class Optimizer(td.components.base.Tidy3DBaseModel):
   17  
   18  	learning_rate : pd.NonNegativeFloat = pd.Field(

~/Documents/Flexcompute/tidy3d-docs/tidy3d/tidy3d/plugins/invdes/result.py:
    9  import tidy3d as td
   10  
   11: class OptimizeResult(td.components.base.Tidy3DBaseModel):
   12  
   13  

4 matches across 4 files
